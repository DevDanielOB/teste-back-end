import { MigrationInterface, QueryRunner, Table } from 'typeorm';
import { TypeormMigrationExtensions } from '../extensions';

export class CreateTableTbeUrls1731526796754 implements MigrationInterface {
  public async up(queryRunner: QueryRunner): Promise<void> {
    const urlTable = new Table({
      name: 'tbe_urls',
      comment:
        'Table that stores shortened URLs / Tabela que armazena URLs encurtadas.',
      indices: [
        {
          name: 'idx_tbe_urls_short_url',
          columnNames: ['short_url'],
          isUnique: true,
        },
        {
          name: 'idx_tbe_urls_user_id',
          columnNames: ['user_id'],
        },
      ],
      columns: [
        {
          name: 'url_id',
          type: 'bigint',
          isPrimary: true,
          isGenerated: true,
          generationStrategy: 'increment',
          primaryKeyConstraintName: 'pk_tbe_urls',
          comment:
            'Identificador sequencial único / Unique sequential identifier',
        },
        {
          name: 'original_url',
          type: 'varchar(max)',
          isNullable: false,
          comment:
            'URL original fornecida pelo usuário / Original URL provided by the user',
        },
        {
          name: 'short_url',
          type: 'varchar(30)',
          isNullable: false,
          comment:
            'URL encurtada gerada pelo sistema / Shortened URL generated by the system',
        },
        {
          name: 'user_id',
          type: 'bigint',
          isNullable: true,
          comment: 'ID do usuário autenticado / Authenticated user ID',
        },
        {
          name: 'click_count',
          type: 'int',
          isNullable: false,
          default: '0',
          comment: 'Número de cliques na URL / Number of clicks on the URL',
        },
        {
          name: 'creation_timestamp',
          type: 'DATETIMEOFFSET',
          precision: 7,
          isNullable: false,
          default:
            "SYSDATETIMEOFFSET() AT TIME ZONE 'E. South America Standard Time'",
          comment:
            'Data e hora de criação do registro / Record creation date and time',
        },
        {
          name: 'update_timestamp',
          type: 'DATETIMEOFFSET',
          precision: 7,
          isNullable: false,
          default:
            "SYSDATETIMEOFFSET() AT TIME ZONE 'E. South America Standard Time'",
          onUpdate:
            "SYSDATETIMEOFFSET() AT TIME ZONE 'E. South America Standard Time'",
          comment:
            'Data e hora da última atualização do registro / Last update date and time',
        },
        {
          name: 'deleted_at',
          type: 'DATETIMEOFFSET',
          precision: 7,
          isNullable: true,
          comment:
            'Data e hora de exclusão lógica do registro / Logical deletion date and time',
        },
      ],
      foreignKeys: [
        {
          name: 'fk_tbe_urls_user_id',
          columnNames: ['user_id'],
          referencedTableName: 'tbe_users',
          referencedColumnNames: ['user_id'],
          onDelete: 'SET NULL',
        },
      ],
    });

    await queryRunner.createTable(urlTable);

    await TypeormMigrationExtensions.comments(queryRunner, urlTable);
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.dropTable('tbe_urls');
  }
}
